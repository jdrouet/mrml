[package]
name = "mrml-wasm"
version = "1.3.0"
authors = ["Jérémie Drouet <jeremie.drouet@gmail.com>"]
edition = "2018"

[lib]
name = "mrml_wasm"
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "async", "reqwest-include-loader"]
async = ["dep:wasm-bindgen-futures", "mrml/async"]
reqwest-include-loader = ["async", "mrml/http-loader-async-reqwest"]

[dependencies]
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

mrml = { version = "2.1", path = "../mrml-core", default-features = false, features = [
  "parse",
  "render",
] }

serde = { version = "1.0", features = ["derive"] }
serde-wasm-bindgen = { version = "0.6" }

# to generate typescript binding
tsify = { version = "0.4" }

wasm-bindgen = { version = "0.2" }
wasm-bindgen-futures = { version = "0.4", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
